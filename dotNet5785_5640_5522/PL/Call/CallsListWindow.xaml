<Window x:Class="PL.Call.CallsListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:bo="clr-namespace:BO;assembly=BL"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:PL.Converters"
        Title="Calls List | Calls Management"
        Height="700" 
        Width="1300"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Loaded="Window_Loaded"
        Closed="Window_Closed"
        WindowStartupLocation="CenterScreen"
        Background="#F8F9FA">

    <Window.Resources>
        <ObjectDataProvider x:Key="CallSortFieldCollectionKey" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="bo:CallFieldFilter"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="CallStatusCollectionKey" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="bo:CallStatus"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="CallTypeCollectionKey" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="bo:CallType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <converters:NullableBooleanConverter x:Key="NullableBooleanConverter"/>
        <converters:NullableEnumConverter x:Key="NullableEnumConverter"/>
        <converters:CanDeleteCallConverter x:Key="CanDeleteCallConverter"/>
        <converters:IsStatusAssignedConverter x:Key="IsStatusAssignedConverter"/>
        <converters:StatusToBackgroundConverter x:Key="StatusToBackgroundConverter"/>

        <!-- Modern Color Palette -->
        <SolidColorBrush x:Key="PrimaryBlue" Color="#2563EB"/>
        <SolidColorBrush x:Key="PrimaryBlueHover" Color="#1D4ED8"/>
        <SolidColorBrush x:Key="DangerRed" Color="#DC2626"/>
        <SolidColorBrush x:Key="DangerRedHover" Color="#B91C1C"/>
        <SolidColorBrush x:Key="WarningOrange" Color="#EA580C"/>
        <SolidColorBrush x:Key="WarningOrangeHover" Color="#C2410C"/>
        <SolidColorBrush x:Key="SurfaceWhite" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BorderGray" Color="#E5E7EB"/>
        <SolidColorBrush x:Key="TextPrimary" Color="#111827"/>
        <SolidColorBrush x:Key="TextSecondary" Color="#6B7280"/>
        <SolidColorBrush x:Key="BackgroundGray" Color="#F9FAFB"/>

        <!-- Modern Button Styles -->
        <Style x:Key="ModernPrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBlue}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PrimaryBlueHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1E40AF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Filter ComboBox Style -->
        <Style x:Key="FilterComboBox" TargetType="ComboBox">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Background" Value="{StaticResource SurfaceWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" 
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Grid.Column="2" 
                                        Focusable="false"
                                        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="6">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="20"/>
                                                </Grid.ColumnDefinitions>
                                                <Path x:Name="Arrow"
                                                      Grid.Column="1"
                                                      Fill="{StaticResource TextSecondary}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                            IsHitTestVisible="False" 
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            Margin="12,8"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{StaticResource SurfaceWhite}"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource BorderGray}"
                                            CornerRadius="6"
                                            Effect="{DynamicResource DropShadowEffect}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Action Button Styles -->
        <Style x:Key="DeleteButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource DangerRed}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource DangerRedHover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CancelButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource WarningOrange}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource WarningOrangeHover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Label Style -->
        <Style x:Key="FilterLabel" TargetType="Label">
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Drop Shadow Effect -->
        <DropShadowEffect x:Key="DropShadowEffect" Color="Black" Direction="270" ShadowDepth="2" Opacity="0.1" BlurRadius="8"/>
    </Window.Resources>

    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" Background="{StaticResource SurfaceWhite}" BorderBrush="{StaticResource BorderGray}" BorderThickness="0,0,0,1">
            <Grid Margin="24,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Vertical">
                    <TextBlock Text="Calls Management" FontSize="24" FontWeight="Bold" Foreground="{StaticResource TextPrimary}"/>
                    <TextBlock Text="View and manage all calls in the system" FontSize="14" Foreground="{StaticResource TextSecondary}" Margin="0,4,0,0"/>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <Border Background="#EBF8FF" CornerRadius="8" Padding="12,6" Margin="0,0,8,0">
                        <TextBlock Text="{Binding CallList.Count, StringFormat='Total: {0} calls'}" 
                                   FontWeight="Medium" 
                                   FontSize="13" 
                                   Foreground="{StaticResource PrimaryBlue}"/>
                    </Border>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Filters -->
        <Border Grid.Row="1" Background="{StaticResource BackgroundGray}" BorderBrush="{StaticResource BorderGray}" BorderThickness="0,0,0,1">
            <StackPanel Orientation="Horizontal" Margin="24,16" FlowDirection="LeftToRight">

                <StackPanel Orientation="Horizontal" Margin="0,0,20,0">
                    <Label Content="Sort by:" Style="{StaticResource FilterLabel}"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource CallSortFieldCollectionKey}}"
                              SelectedValue="{Binding SelectedSortField}"
                              Width="140"
                              Style="{StaticResource FilterComboBox}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,20,0">
                    <Label Content="Active:" Style="{StaticResource FilterLabel}"/>
                    <ComboBox ItemsSource="{Binding IsActiveFilterOptions}"
                              SelectedItem="{Binding SelectedIsActiveFilter}"
                              Width="100"
                              Style="{StaticResource FilterComboBox}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource NullableBooleanConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,20,0">
                    <Label Content="Status:" Style="{StaticResource FilterLabel}"/>
                    <ComboBox ItemsSource="{Binding CallStatusOptions}"
                              SelectedItem="{Binding SelectedCallStatusFilter}"
                              Width="150"
                              Style="{StaticResource FilterComboBox}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource NullableEnumConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <Label Content="Type:" Style="{StaticResource FilterLabel}"/>
                    <ComboBox ItemsSource="{Binding CallTypeOptions}"
                              SelectedItem="{Binding SelectedCallTypeFilter}"
                              Width="150"
                              Style="{StaticResource FilterComboBox}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource NullableEnumConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

            </StackPanel>
        </Border>

        <!-- DataGrid Container -->
        <Border Grid.Row="2" Background="{StaticResource SurfaceWhite}" Margin="24,16,24,0" CornerRadius="12" Effect="{StaticResource DropShadowEffect}">
            <DataGrid ItemsSource="{Binding CallList}"
                      SelectedItem="{Binding SelectedCall}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      MouseDoubleClick="DataGrid_MouseDoubleClick"
                      RowHeight="44"
                      GridLinesVisibility="None"
                      HeadersVisibility="Column"
                      SelectionMode="Single"
                      Background="Transparent"
                      BorderThickness="0"
                      Margin="1">

                <DataGrid.Resources>
                    <!-- DataGrid Header Style -->
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#F8FAFC"/>
                        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="Padding" Value="16,12"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>

                    <!-- DataGrid Row Style -->
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F8FAFC"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#EBF8FF"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!-- DataGrid Cell Style -->
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="12,0"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}">
                                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Id" Binding="{Binding CallId}" Width="80"/>

                    <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="120">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                <Setter Property="Background" Value="{Binding Status, Converter={StaticResource StatusToBackgroundConverter}}"/>
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Type" Binding="{Binding CallType}" Width="100"/>
                    <DataGridTextColumn Header="Start Time" Binding="{Binding StartTime, StringFormat='{}{0:HH:mm dd/MM}'}" Width="120"/>
                    <DataGridTextColumn Header="Total Assignments" Binding="{Binding TotalAssignments}" Width="120"/>

                    <DataGridTemplateColumn Header="Actions" Width="180" CanUserSort="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Content="Delete" 
                                            Click="DeleteCall_Click" 
                                            Style="{StaticResource DeleteButton}">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{StaticResource CanDeleteCallConverter}">
                                                <Binding Path="CallStatus"/>
                                                <Binding Path="TotalAssignments"/>
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>

                                    <Button Content="Cancel Assignment" 
                                            Click="CancelAssignment_Click" 
                                            Style="{StaticResource CancelButton}"
                                            CommandParameter="{Binding}" 
                                            Margin="4,0,0,0"
                                            Visibility="{Binding Status, Converter={StaticResource IsStatusAssignedConverter}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <!-- Footer with Add Button -->
        <Border Grid.Row="3" Background="{StaticResource SurfaceWhite}" BorderBrush="{StaticResource BorderGray}" BorderThickness="0,1,0,0" Margin="0,16,0,0">
            <Grid Margin="24,16">
                <Button Content="Add New Call" 
                        Click="AddCall_Click"
                        Style="{StaticResource ModernPrimaryButton}"
                        HorizontalAlignment="Left"
                        Width="180"
                        Height="48"/>
            </Grid>
        </Border>

    </Grid>
</Window>